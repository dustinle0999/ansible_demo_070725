---
- name: Validate OCP Cluster against blueprint
  hosts: localhost
  gather_facts: False
  vars:
    ocp_username: "{{ ansible_user }}"
    ocp_password: "{{ ansible_password }}"
    ocp_api: "{{ ocp_api_host | default('localhost') }}"

  tasks:
    - block:
        - name: Authenticate to OCP and generate token
          redhat.openshift.openshift_auth:
            username: "{{ ocp_username }}"
            password: "{{ ocp_password }}"
            host: "{{ ocp_api }}"
            validate_certs: no
          register: openshift_auth_results

        - name: Get worker node data
          kubernetes.core.k8s_info:
            kind: Node
            label_selectors:
              - "node-role.kubernetes.io/worker"
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ ocp_api }}"
          register: worker_node_list

        - name: Get control plane data
          kubernetes.core.k8s_info:
            kind: Node
            label_selectors:
              - "node-role.kubernetes.io/control-plane"
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ ocp_api }}"
          register: control_plane_list

        - name: Get cluster Network info
          kubernetes.core.k8s_info:
            kind: Network
            api_version: config.openshift.io/v1
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ ocp_api }}"
          register: cluster_network

        - name: Get ClusterVersion info
          kubernetes.core.k8s_info:
            kind: ClusterVersion
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ ocp_api }}"
          register: cluster_version

        - name: Get StorageClass info
          kubernetes.core.k8s_info:
            kind: StorageClass
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ ocp_api }}"
          register: storage_class

        - name: save current cluster report to variable
          ansible.builtin.set_fact:
            cluster_report: "{{ lookup('ansible.builtin.template', 'templates/cluster-report.yml.j2') | from_yaml }}"

        - name: Print out cluster report
          ansible.builtin.debug:
            var: cluster_report
